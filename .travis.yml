language: cpp
sudo: required
dist: trusty

services:
  - docker

stages:
  - lint
  - test
  - coverage

before_install:
  - docker pull mfcats/splinelib:spack
  - docker pull mfcats/splinelib:gtest

jobs:
  include:
    - stage: lint
      name: cpplint
      install: docker build -t splinelib:cpplint -f scripts/docker/Dockerfile.lint.cpplint .
      script: docker run -te "TERM=xterm-256color" --name cpplint splinelib:cpplint
      after_success: docker remove cpplint
    - stage: lint
      name: clang-tidy
      install: docker build -t splinelib:clang-tidy -f scripts/docker/Dockerfile.lint.clang-tidy .
      script: docker run --name clang-tidy splinelib:clang-tidy
      after_success: docker rm clang-tidy
    - stage: lint
      name: oclint
      before_install: echo oclint # docker cp $(sudo docker ps -aqf "name=clang-tidy"):/code/compile_commands.json ${TRAVIS_BUILD_DIR}
      script: echo oclint
    - stage: test
      name: gcc7
      install: docker build -t splinelibtests:gcc7 -f scripts/docker/Dockerfile.gcc7test .
      script: docker run -te "TERM=xterm-256color" --name tests_gcc7 splinelibtests:gcc7
      after_success: docker remove tests_gcc7
    - stage: test
      name: gcc8
      install: docker build -t splinelibtests:gcc8 -f scripts/docker/Dockerfile.gcc8test .
      script: docker run -te "TERM=xterm-256color" --name tests_gcc8 splinelibtests:gcc8
      after_success: docker remove tests_gcc8
    - stage: coverage
      install: docker build -t splinelibtests:coverage -f scripts/docker/Dockerfile.coverage .
      script: docker run -te "TERM=xterm-256color" --name coverage splinelibtests:coverage
      after_success: docker remove coverage

